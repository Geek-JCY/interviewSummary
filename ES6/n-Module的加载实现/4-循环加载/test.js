/*
4.循环加载

“循环加载”（circular dependency）指的是，a脚本的执行依赖b脚本，而b脚本的执行又依赖a脚本。
 */
// a.js
var b = require('b');

// b.js
var a = require('a');
/*
通常，“循环加载”表示存在强耦合，如果处理不好，还可能导致递归加载，
使得程序无法执行，因此应该避免出现。

但是实际上，这是很难避免的，尤其是依赖关系复杂的大项目，
很容易出现a依赖b，b依赖c，c又依赖a这样的情况。这意味着，模块加载机制必须考虑“循环加载”的情况。

对于 JavaScript 语言来说，目前最常见的两种模块格式 CommonJS 和 ES6，
处理“循环加载”的方法是不一样的，返回的结果也不一样。
 */

