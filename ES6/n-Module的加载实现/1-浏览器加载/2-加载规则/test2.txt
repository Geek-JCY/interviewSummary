/*
ES6 模块也允许内嵌在网页中，语法行为与加载外部脚本完全一致。
 */
<script type="module">
    import utils from './util.js';

    // other code
</script>

/*
对于外部的模块脚本（上例是foo.js），有几点需要注意。

    - 代码是在模块作用域之中运行，而不是在全局作用域运行。模块内部的顶层变量，外部不可见。

    - 模块脚本自动采用严格模式，不管有没有声明use strict。

    - 模块之中，可以使用 import命令加载其他模块（.js后缀不可省略，需要提供绝对 URL 或相对 URL），
        也可以使用 export命令输出对外接口。

    - 模块之中，顶层的 this关键字返回 undefined，而不是指向 window。
        也就是说，在模块顶层使用 this关键字，是无意义的。

    - 同一个模块如果加载多次，将只执行一次。
 */
/*
下面是一个示例模块。
 */
import utils from 'https://example.com/js/utils.js'

const x = 1;

console.log(x === window.x);    // false
console.log(this === undefined); // true

delete x;   // 句法错误，严格模式禁止删除变量

/*
利用顶层的 this等于 undefined这个语法点，可以侦测当前代码是否在 ES6 模块之中。
 */
const isNotModuleScript = this != undefined;


